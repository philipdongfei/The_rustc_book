{"message":"formatting may not be suitable for sub-register argument","code":{"code":"asm_sub_register","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":146,"byte_end":150,"line_start":8,"line_end":8,"column_start":38,"column_end":42,"is_primary":false,"text":[{"text":"        asm!(\"mov {0}, {0}\", in(reg) 0i16);","highlight_start":38,"highlight_end":42}],"label":"for this argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":127,"byte_end":130,"line_start":8,"line_end":8,"column_start":19,"column_end":22,"is_primary":true,"text":[{"text":"        asm!(\"mov {0}, {0}\", in(reg) 0i16);","highlight_start":19,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":132,"byte_end":135,"line_start":8,"line_end":8,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"        asm!(\"mov {0}, {0}\", in(reg) 0i16);","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(asm_sub_register)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use the `x` modifier to have the register formatted as `ax`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"or use the `r` modifier to keep the default formatting of `rax`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: formatting may not be suitable for sub-register argument\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:8:19\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        asm!(\"mov {0}, {0}\", in(reg) 0i16);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfor this argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(asm_sub_register)]` on by default\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: use the `x` modifier to have the register formatted as `ax`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: or use the `r` modifier to keep the default formatting of `rax`\u001b[0m\n\n"}
{"message":"1 warning emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 1 warning emitted\u001b[0m\n\n"}
